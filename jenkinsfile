pipeline {
    agent any


    environment {
        registryCredentials = "nexus"
        registry = "192.168.33.10:8083"
        imageName = "nodemongoapp"
        imageTag = "6.0"
        }

    stages {
        stage('Install dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        stage('Building images') {
            steps {
                script {
                    // Build and tag the Docker image
                    sh "docker build -t ${registry}/${imageName}:${imageTag} ."
                    
                    // If using docker-compose, use this instead:
                    // sh "docker-compose build"
                    // sh "docker tag ${imageName} ${registry}/${imageName}:${imageTag}"
                }
            }
        }

        stage('Deploy to Nexus') {
            steps {
                script {
                    docker.withRegistry("http://${registry}", registryCredentials) {
                        sh "docker push ${registry}/${imageName}:${imageTag}"
                    }
                }
            }
        }



        stage('Run application') {
            steps {
                script {
                    docker.withRegistry("http://${registry}", registryCredentials) {
                        sh "docker pull ${registry}/nodemongoapp:6.0"
                        sh 'docker compose up -d'
                    }
                }
            }
        }
    }
}
